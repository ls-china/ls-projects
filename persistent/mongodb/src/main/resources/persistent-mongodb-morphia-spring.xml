<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- mongoDB的配置对象 -->
    <bean id="mongoOptionsDto" class="com.ls.persistent.mongodb.morphia.MongoClientOptionsDto">
    </bean>

    <!-- 使用工厂创建mongo实例 -->
    <bean id="mongo" class="com.ls.persistent.mongodb.morphia.MongoClientFactoryBean">
        <!-- mongoDB的配置对象 -->
        <property name="mongoClientOptionsDto" ref="mongoOptionsDto"/>

        <!-- 是否主从分离(读取从库)，默认为false，读写都在主库 -->
        <property name="readSecondary" value="false"/>

        <!-- 设定写策略，默认为WriteConcern.SAFE，优先级高于mongoOptions中的safe -->
        <property name="writeConcern" value="SAFE"/>

        <!-- 设定服务器列表，默认为localhost:27017 -->
        <property name="serverStrings">
            <array>
                <value>${mongoDB.server}</value>
            </array>
        </property>
    </bean>


    <!-- 使用工厂创建morphia实例，同时完成类映射操作 -->
    <bean id="morphia" class="com.ls.persistent.mongodb.morphia.MorphiaFactoryBean">
        <!-- 指定要扫描的POJO包路径 -->
        <property name="mapPackages">
            <array>
                <value>me.watchzerg.test.morphia.pojo</value>
            </array>
        </property>

        <!-- 指定要映射的类 -->
        <!-- <property name="mapClasses">
            <array>
                <value>me.watchzerg.test.morphia.pojo.Hotel</value>
                <value>me.watchzerg.test.morphia.pojo.Address</value>
            </array>
        </property> -->

        <!-- 扫描包时是否忽略不可用的类，默认为false -->
        <!-- <property name="ignoreInvalidClasses" value="false"/> -->
    </bean>

    <!-- 使用工厂创建datastore，同时完成index和caps的确认操作 -->
    <bean id="datastore" class="com.ls.persistent.mongodb.morphia.DatastoreFactoryBean">
        <property name="morphia" ref="morphia"/>
        <property name="mongoClient" ref="mongo"/>

        <!-- collection的名称 -->
        <property name="dbName" value="${mongoDB.dbName}"/>

        <!-- 用户名和密码可以为空 -->
        <!-- <property name="username" value="my_username"/>
        <property name="password" value="my_password"/> -->

        <!-- 是否进行index和caps的确认操作，默认为flase -->
        <property name="toEnsureIndexes" value="true"/>
        <property name="toEnsureCaps" value="true"/>
    </bean>

    <!-- ===============以下是具体DAO的实现===================== -->

</beans>